{"version":3,"sources":["components/TodoItem/TodoItem.jsx","components/TodoList/TodoList.jsx","components/NewTodo/NewTodo.jsx","components/TodosFilter/TodosFilter.jsx","App.js","index.js"],"names":["TodoItem","todo","toggleStatusItem","className","classnames","completed","type","onChange","id","checked","title","TodoList","todos","map","key","NewTodo","setTodos","useState","newTodoQuery","setTodo","onSubmit","e","preventDefault","prevTodos","Date","placeholder","value","target","TodosFilter","setFilter","selectedFilter","changeFilter","name","href","selected","onClick","App","toggleStatus","setToggle","countNotCompleted","filter","length","filteredTodos","All","Active","Completed","htmlFor","itemId","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.040c4b2a.chunk.js","sourcesContent":["import React from 'react';\nimport classnames from 'classnames';\nimport PropTypes from 'prop-types';\n\nexport const TodoItem = ({ todo, toggleStatusItem }) => (\n  <li\n    className={classnames({\n      completed: todo.completed,\n    })}\n  >\n    <div className=\"view\">\n      <input\n        type=\"checkbox\"\n        className=\"toggle\"\n        onChange={() => {\n          toggleStatusItem(todo.id);\n        }}\n        checked={todo.completed}\n      />\n      <label>\n        {todo.title}\n      </label>\n      <button type=\"button\" className=\"destroy\" />\n    </div>\n    <input type=\"text\" className=\"edit\" />\n  </li>\n);\n\nTodoItem.propTypes = {\n  todo: PropTypes.shape({\n    completed: PropTypes.bool.isRequired,\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n  }).isRequired,\n  toggleStatusItem: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { TodoItem } from '../TodoItem';\n\nexport const TodoList = ({ todos, toggleStatusItem }) => (\n  <ul className=\"todo-list\">\n    {todos.map(todo => (\n      <TodoItem\n        key={todo.id}\n        todo={todo}\n        toggleStatusItem={toggleStatusItem}\n      />\n    ))}\n\n    <li>\n      <div className=\"view\">\n        <input type=\"checkbox\" className=\"toggle\" />\n        <label>asdfghj</label>\n        <button type=\"button\" className=\"destroy\" />\n      </div>\n      <input type=\"text\" className=\"edit\" />\n    </li>\n\n    <li className=\"completed\">\n      <div className=\"view\">\n        <input type=\"checkbox\" className=\"toggle\" />\n        <label>qwertyuio</label>\n        <button type=\"button\" className=\"destroy\" />\n      </div>\n      <input type=\"text\" className=\"edit\" />\n    </li>\n\n    <li className=\"editing\">\n      <div className=\"view\">\n        <input type=\"checkbox\" className=\"toggle\" />\n        <label>zxcvbnm</label>\n        <button type=\"button\" className=\"destroy\" />\n      </div>\n      <input type=\"text\" className=\"edit\" />\n    </li>\n\n    <li>\n      <div className=\"view\">\n        <input type=\"checkbox\" className=\"toggle\" />\n        <label>1234567890</label>\n        <button type=\"button\" className=\"destroy\" />\n      </div>\n      <input type=\"text\" className=\"edit\" />\n    </li>\n  </ul>\n);\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.shape().isRequired).isRequired,\n  toggleStatusItem: PropTypes.func.isRequired,\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nexport const NewTodo = ({ setTodos }) => {\n  const [newTodoQuery, setTodo] = useState('');\n\n  const handleInput = (e) => {\n    const { value } = e.target;\n\n    setTodo(value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (newTodoQuery) {\n      setTodos(prevTodos => (\n        [...prevTodos,\n          {\n            id: +new Date(),\n            title: newTodoQuery,\n            completed: false,\n          }]\n      ));\n\n      setTodo('');\n    }\n  };\n\n  return (\n    <form\n      onSubmit={handleSubmit}\n    >\n      <input\n        type=\"text\"\n        className=\"new-todo\"\n        placeholder=\"What needs to be done?\"\n        value={newTodoQuery}\n        onChange={handleInput}\n      />\n    </form>\n  );\n};\n\nNewTodo.propTypes = {\n  setTodos: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nexport const TodosFilter = ({ setFilter, selectedFilter }) => {\n  const changeFilter = (e) => {\n    e.preventDefault();\n\n    setFilter(e.target.name);\n  };\n\n  return (\n    <ul className=\"filters\">\n      <li>\n        <a\n          href=\"#/\"\n          className={classnames({\n            selected: selectedFilter === 'All',\n          })}\n          name=\"All\"\n          onClick={changeFilter}\n        >\n          All\n        </a>\n      </li>\n\n      <li>\n        <a\n          href=\"#/active\"\n          className={classnames({\n            selected: selectedFilter === 'Active',\n          })}\n          name=\"Active\"\n          onClick={changeFilter}\n        >\n          Active\n        </a>\n      </li>\n\n      <li>\n        <a\n          href=\"#/completed\"\n          className={classnames({\n            selected: selectedFilter === 'Completed',\n          })}\n          name=\"Completed\"\n          onClick={changeFilter}\n        >\n          Completed\n        </a>\n      </li>\n    </ul>\n  );\n};\n\nTodosFilter.propTypes = {\n  setFilter: PropTypes.func.isRequired,\n  selectedFilter: PropTypes.string.isRequired,\n};\n","import React, { useState } from 'react';\nimport { TodoList } from './components/TodoList';\nimport { NewTodo } from './components/NewTodo';\nimport { TodosFilter } from './components/TodosFilter';\n\nfunction App() {\n  const [todos, setTodos] = useState([]);\n  const [toggleStatus, setToggle] = useState(true);\n  const [selectedFilter, setFilter] = useState('All');\n\n  const getCountNotCompleted = () => (\n    todos.filter(todo => !todo.completed).length\n  );\n\n  const countNotCompleted = getCountNotCompleted();\n\n  const toggleStatusAll = () => {\n    setTodos(todos.map(todo => (\n      { ...todo, completed: toggleStatus }\n    )));\n    setToggle(!toggleStatus);\n  };\n\n  const toggleStatusItem = (itemId) => {\n    setTodos(todos.map((todo) => {\n      if (todo.id === itemId) {\n        return { ...todo, completed: !todo.completed };\n      }\n\n      return todo;\n    }));\n  };\n\n  const filterTodos = () => {\n    const FILTERS = {\n      All: todos,\n      Active: todos.filter(todo => !todo.completed),\n      Completed: todos.filter(todo => todo.completed),\n    };\n\n    return FILTERS[selectedFilter];\n  };\n\n  const filteredTodos = filterTodos();\n\n  return (\n    <section className=\"todoapp\">\n      <header className=\"header\">\n        <h1>todos</h1>\n        <NewTodo setTodos={setTodos} />\n      </header>\n\n      <section className=\"main\">\n        <input\n          type=\"checkbox\"\n          id=\"toggle-all\"\n          className=\"toggle-all\"\n          onChange={toggleStatusAll}\n          value={toggleStatus}\n          checked={!countNotCompleted > 0}\n        />\n        {todos.length > 0\n          && (\n            <label htmlFor=\"toggle-all\">Mark all as complete</label>\n          )\n        }\n        <TodoList\n          todos={filteredTodos}\n          toggleStatusItem={toggleStatusItem}\n        />\n      </section>\n\n      {todos.length > 0\n        && (\n          <footer className=\"footer\">\n            <span className=\"todo-count\">\n              {`${countNotCompleted} `}\n              item left\n            </span>\n\n            <TodosFilter\n              setFilter={setFilter}\n              selectedFilter={selectedFilter}\n            />\n\n            <button type=\"button\" className=\"clear-completed\">\n              Clear completed\n            </button>\n          </footer>\n        )}\n    </section>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './styles/index.css';\nimport './styles/todo-list.css';\nimport './styles/filters.css';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}